package com.facebook.activities;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.net.MalformedURLException;

import android.app.Activity;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;

import com.facebook.android.AsyncFacebookRunner;
import com.facebook.android.DialogError;
import com.facebook.android.Facebook;
import com.facebook.android.FacebookError;
import com.facebook.android.SessionEvents;
import com.facebook.android.SessionStore;
import com.facebook.android.AsyncFacebookRunner.RequestListener;
import com.facebook.android.Facebook.DialogListener;
import com.facebook.android.Facebook.FBResponseListener;
import com.facebook.android.SessionEvents.AuthListener;

public class FacebookDemoActivity extends Activity implements FBResponseListener {
	
	private Facebook facebook = new Facebook();
	private AuthListener listener = new SampleAuthListener();
	private TextView feedField;
	
	/** Application ID provided by Facebook to uniquely identify your application. */
	public final static String APP_ID = "139074992825528";
	
	/** Permissions for facebook operations. */
	public static final String[] PERMISSIONS = new String[] { "publish_stream", "read_stream" };
	
    /** Called when the activity is first created. */
	@Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.main);
        
        feedField = (TextView) findViewById(R.id.feed);
        
        Button submitButton = (Button) findViewById(R.id.submit);
		submitButton.setOnClickListener(new View.OnClickListener() {
			@Override
			public void onClick(View v) {
				String status = feedField.getText().toString();
				status.replaceAll("&", "&amp;");
				setFacebookStatus(status);
			}
		});
        
        facebook = new Facebook();
		SessionStore.restore(facebook, FacebookDemoActivity.this);
		if (facebook.isSessionValid()) {
			SessionStore.clear(FacebookDemoActivity.this);
			new AsyncFacebookRunner(facebook).logout(FacebookDemoActivity.this, new RequestListener() {
				public void onComplete(String response) {
					doLogout();
				}
				public void onFileNotFoundException(FileNotFoundException error) {
					doLogout();
				}
				public void onIOException(IOException error) {
					doLogout();
				}
				public void onMalformedURLException(MalformedURLException error) {
					doLogout();
				}
				public void onFacebookError(FacebookError error) {
					doLogout();
				}
			});
		} else {
			/** If session is not valid launch the login page. */
			SessionEvents.addAuthListener(listener);
			facebook.authorize(FacebookDemoActivity.this, APP_ID, PERMISSIONS, new LoginDialogListener());
		}
    }
	
	@Override
	public void onResume() {
		super.onResume();
		SessionStore.restore(facebook, this);
	}
	
	/**
	 * Callback method on logout. Should be overriden.
	 */
	private void doLogout() {
    	FacebookDemoActivity.this.runOnUiThread(new Runnable() {
			@Override
			public void run() {
			}
		});
	}
    
	/**
	 * Wrapper method for updating status on facebook timeline if session is valid otherwise launches login page.
	 * @param content Status message to update on facebook
	 */
    private void setFacebookStatus(final String content) {
		final FacebookManager manager = FacebookManager.getInstance();
		if (facebook.isSessionValid()) {
			new Thread() {
				public void run() {
					manager.updateStatus((FBResponseListener) FacebookDemoActivity.this, content);
				};
			}.start();
		}
		else {
			SessionEvents.addAuthListener(listener);
			facebook.authorize(FacebookDemoActivity.this, APP_ID, PERMISSIONS, new LoginDialogListener());
		}
	}
    
    /**
     * Delegate Class for handling facebook login dialog  
     */
    private final class LoginDialogListener implements DialogListener {
		public void onComplete(Bundle values) {
			try {
				SessionEvents.onLoginSuccess();
			} catch (Exception ex) {
				ex.printStackTrace();
			}
		}

		public void onFacebookError(FacebookError error) {
			SessionEvents.onLoginError(error.getMessage());
		}

		public void onError(DialogError error) {
			SessionEvents.onLoginError(error.getMessage());
		}

		public void onCancel() {
			SessionEvents.onLoginError("Action Canceled");
		}
	}
    
    /**
     * Delegate Class for notifying the application when authorize events happen.
     */
    public class SampleAuthListener implements AuthListener {
		public void onAuthSucceed() {
			SessionStore.save(facebook, FacebookDemoActivity.this);
			SessionEvents.removeAuthListener(listener);
		}
		
		public void onAuthFail(String error) {

		}
	}
    
    /** Interface FBResponseListener implementation methods */

	@Override
	public void responseFailure(int requestCode) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void responseSuccess(int requestCode, Object result) {
		// TODO Auto-generated method stub
		
	}
    
    
}